"Criterio 4" = percent(sum(CRIT_4_BOOL, na.rm = T)/n(), accuracy = 0.1),
"Criterio 5" = percent(sum(CRIT_5_BOOL, na.rm = T)/n(), accuracy = 0.1),
"Criterio 6" = percent(sum(CRIT_6_BOOL, na.rm = T)/n(), accuracy = 0.1),
"Criterio 7" = percent(sum(CRIT_7_BOOL, na.rm = T)/n(), accuracy = 0.1),
"Informes" = n(),
"Resultado promedio" = percent(mean(SCORE, na.rm = T), accuracy = 0.1)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
TAB_CALIF_E
?percent()
TAB_CALIF_E = BD_INF %>%
group_by(AREA, SUBSECT) %>%
summarise("Criterio 1" = percent(sum(CRIT_1_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 2" = percent(sum(CRIT_2_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 3" = percent(sum(CRIT_3_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 4" = percent(sum(CRIT_4_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 5" = percent(sum(CRIT_5_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 6" = percent(sum(CRIT_6_BOOL, na.rm = T)/n(), digits = 2),
"Criterio 7" = percent(sum(CRIT_7_BOOL, na.rm = T)/n(), digits = 2),
"Informes" = n(),
"Resultado promedio" = percent(mean(SCORE, na.rm = T), digits = 2)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
TAB_CALIF_E
TAB_CALIF_E = BD_INF %>%
group_by(AREA, SUBSECT) %>%
summarise("Criterio 1" = percent(sum(CRIT_1_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 2" = percent(sum(CRIT_2_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 3" = percent(sum(CRIT_3_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 4" = percent(sum(CRIT_4_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 5" = percent(sum(CRIT_5_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 6" = percent(sum(CRIT_6_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 7" = percent(sum(CRIT_7_BOOL, na.rm = T)/n(), digits = 1),
"Informes" = n(),
"Resultado promedio" = percent(mean(SCORE, na.rm = T), digits = 1)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
TAB_CALIF_E
#Evol
G_1_General = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(AREA,F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = AREA)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
x = "Cantidad de informes",
y = "Fecha de registro",
color = "Área",
caption = "") +
theme_bw()
G_1_General
#Evol
G_1_General = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(AREA,F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = AREA)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Área",
caption = "") +
theme_bw()
G_1_General
G_1_Especif = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(SUBSECT, F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = SUBSECT)) +
scale_color_manual(values = c(PALETA.PRINCIPAL, PALETA.SECUNDARIA))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Subsector",
caption = "") +
theme_bw()
G_1_Especif
#Scater plot
G_2 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3) +
theme_bw() +
facet_wrap(~AREA)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_2
G_3 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3)+
theme_bw() +
facet_wrap(~ SUBSECT)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_3
########################## ###
##    PARAMETROS Y SETEO   ####
########################## ###
rm(list=ls())
source('1) SCRIPT/1) BASE_LF.R')
RES=250
ALTO=1400 #1000
ANCHO=2600 #1200
ESCAL_CONV=0.026458333
# RUTA_STOCK = "2) BDs/4) REPORTES/1) INAF/1) STOCK/"
# RUTA_DOCUMENTOS = "2) BDs/4) REPORTES/1) INAF/2) DOCUMENTOS/"
#Actualizar los accesos
library(googlesheets4)
googlesheets4::gs4_auth("analisisdedatos-dfai@oefa.gob.pe")
#Funciones creadas: Eliminar tilder y caracteres raros
DEL_TILD <- function( s ) {
chartr("áéóūáéíóúÁÉÍÓÚýÝàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛãõÃÕñÑäëïöüÄËÏÖÜÿçÇ",
"aeouaeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC",
s );
}
#Funciones creadas: Crear calendario
FERIADOS = c("2023-01-01", "2023-01-02", "2023-04-06", "2023-04-07", "2023-05-01",
"2023-06-29", "2023-07-23", "2023-07-28", "2023-07-29", "2023-08-06",
"2023-08-30", "2023-10-08", "2023-11-01", "2023-12-07", "2023-12-08",
"2023-12-09", "2023-12-25", "2023-12-26"
)
CAL_2023 = bizdays::create.calendar("CAL_2023",
weekdays = c("saturday", "sunday"),
holidays = FERIADOS)
# #Función para el calculo del tamaño de muestra por proporciones
# T_MUESTRA_P = function(N, p , conf, e) {
#   ceiling((N*p*(1-p))/((N-1)*(e^2)/(qnorm(1-(1-conf)/2,0,1)^2)+p*(1-p)))
# }
#
# #Parámetros estandar para proporciones
# P = 0.5           # % de éxito
# CONF = 0.95       # Nivel de confianza
# E = 0.07          # Error máximo permitible
# T_NR = 0.0       # Tasa de no respuesta
##############################
#################### ###
##    BD INFORMES    ####
#################### ###
# Seteo
URL <- "https://docs.google.com/spreadsheets/d/1le6ts3LMrmuBR5art1LIPVobWfwUOEP2GsajU8gpt5c/edit?usp=sharing"
INPUT <- "RESPUESTAS"
# OUTPUT <- "2"
# Read the data
BD_INF = read_sheet(URL, INPUT) %>%
rename(F_REG = 1,
CORREO = 2,
APELL = 3,
NOMB = 4,
DNI = 5,
NUM_INF = 6,
SUBSECT = 7,
CRIT_1 = 8,
CRIT_2 = 9,
CRIT_3 = 10,
CRIT_4 = 11,
CRIT_5 = 12,
CRIT_6 = 13,
CRIT_7 = 14,
CALIF = 15,
COMENT = 16,
CRIT_1_BOOL = 17,
CRIT_2_BOOL = 18,
CRIT_3_BOOL = 19,
CRIT_4_BOOL = 20,
CRIT_5_BOOL = 21,
CRIT_6_BOOL = 22,
CRIT_7_BOOL = 23,
ACEPT = 24,
SCORE = 25,
RESULT = 26) %>%
mutate(F_REG = as.Date(floor_date(F_REG, unit = "day")),
AREA = case_when(SUBSECT == "Minería" | SUBSECT == "Hidrocarburos mayores" | SUBSECT == "Hidrocarburos menores" | SUBSECT == "Electricidad" ~ "SFEM",
SUBSECT == "Agricultura" | SUBSECT == "Pesca" | SUBSECT == "Industria" | SUBSECT == "Consultoras ambientales" ~ "SFAP",
SUBSECT == "Residuos sólidos" ~ "SFIS"),
ACEPT = case_when(is.na(ACEPT) == T ~ "Sin registro",
ACEPT == 1 ~ "Aceptable",
ACEPT == 0 ~ "Inaceptable"))
########################
############### ###
##    TABLAS    ####
############### ###
#Meta
img = jpeg::readJPEG("2) INPUT/META MARZO.jpg")
install.packages("jpeg")
############### ###
##    TABLAS    ####
############### ###
#Meta
img = jpeg::readJPEG("2) INPUT/META MARZO.jpg")
plot(1, type = "n", axes = FALSE, xlab = "", ylab = "", xlim = 0:1, ylim = 0:1) #create an empty plot
rasterImage(img, 0, 0, 1, 1)
#General (Área)
TAB_INF_G = BD_INF %>%
mutate(MES_REG = factor(month(F_REG),
levels = 1:12,
labels = c("Enero", "Febrero", "Marzo",
"Abril", "Mayo", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre",
"Noviembre", "Diciembre"))) %>%
group_by(MES_REG, AREA) %>%
summarise(CANT = n()) %>%
pivot_wider(
id_cols = c(AREA),
names_from = MES_REG,
values_from = c(CANT)
) %>%
ungroup() %>%
rowwise() %>%
mutate(TOTAL = sum(c_across(c(2,3)), na.rm = TRUE)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
#Específico (Área+subsect)
TAB_INF_E = BD_INF %>%
mutate(MES_REG = factor(month(F_REG),
levels = 1:12,
labels = c("Enero", "Febrero", "Marzo",
"Abril", "Mayo", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre",
"Noviembre", "Diciembre"))) %>%
group_by(MES_REG, AREA, SUBSECT) %>%
summarise(CANT = n()) %>%
ungroup() %>%
pivot_wider(
id_cols = c(AREA, SUBSECT),
names_from = MES_REG,
values_from = c(CANT)
) %>%
rowwise() %>%
mutate(TOTAL = sum(across(c(3,4)), na.rm = TRUE)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
#Calif
TAB_CALIF_G = BD_INF %>%
summarise(PORC_C1 = sum(CRIT_1_BOOL, na.rm = T)/n(),
PORC_C2 = sum(CRIT_2_BOOL, na.rm = T)/n(),
PORC_C3 = sum(CRIT_3_BOOL, na.rm = T)/n(),
PORC_C4 = sum(CRIT_4_BOOL, na.rm = T)/n(),
PORC_C5 = sum(CRIT_5_BOOL, na.rm = T)/n(),
PORC_C6 = sum(CRIT_6_BOOL, na.rm = T)/n(),
PORC_C7 = sum(CRIT_7_BOOL, na.rm = T)/n(),
Q = n(),
CALIF_min = min(CALIF, na.rm = T),
CALIF_max = max(CALIF, na.rm = T),
CALIF_mean = mean(CALIF, na.rm = T),
SCORE_min = min(SCORE, na.rm = T),
SCORE_max = max(SCORE, na.rm = T),
SCORE_mean = mean(SCORE, na.rm = T)) #%>%
# pivot_longer(cols = starts_with("PORC_"),
#              names_to = "CRITERIO",
#              values_to = "PORC")
TAB_CALIF_E = BD_INF %>%
group_by(AREA, SUBSECT) %>%
summarise("Criterio 1" = percent(sum(CRIT_1_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 2" = percent(sum(CRIT_2_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 3" = percent(sum(CRIT_3_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 4" = percent(sum(CRIT_4_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 5" = percent(sum(CRIT_5_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 6" = percent(sum(CRIT_6_BOOL, na.rm = T)/n(), digits = 1),
"Criterio 7" = percent(sum(CRIT_7_BOOL, na.rm = T)/n(), digits = 1),
"Informes" = n(),
"Resultado promedio" = percent(mean(SCORE, na.rm = T), digits = 1)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
###################
############################ ###
##    GRAFICOS Y ANALISIS    ####
############################ ###
#Evol
G_1_General = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(AREA,F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = AREA)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Área",
caption = "") +
theme_bw()
G_1_General
G_1_Especif = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(SUBSECT, F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = SUBSECT)) +
scale_color_manual(values = c(PALETA.PRINCIPAL, PALETA.SECUNDARIA))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Subsector",
caption = "") +
theme_bw()
G_1_Especif
#Scater plot
G_2 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3) +
theme_bw() +
facet_wrap(~AREA)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_2
G_3 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3)+
theme_bw() +
facet_wrap(~ SUBSECT)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_3
################################
TAB_INF_G
#Evol
G_1_General = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(AREA,F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = AREA)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Área",
caption = "") +
theme_bw()
G_1_General
G_1_Especif = BD_INF %>%
mutate(semana = lubridate::week(F_REG),
mes = month(F_REG),
mes_aux = format(F_REG, "%b"),
sem_mes = ceiling(day(F_REG)/7),
sem_mes_aux = paste0("Semana ",
sem_mes,
" ",
mes_aux),
F_SEMANA = floor_date(F_REG, "week", week_start = 1)) %>%
group_by(SUBSECT, F_SEMANA) %>%
summarise(Q = n()) %>%
ggplot(aes(x = F_SEMANA,
y = Q,
color = SUBSECT)) +
scale_color_manual(values = c(PALETA.PRINCIPAL, PALETA.SECUNDARIA))+
geom_line() +
geom_point() +
labs(title = "Cantidad de informes evaluados, por semana",
y = "Cantidad de informes",
x = "Fecha de registro",
color = "Subsector",
caption = "") +
theme_bw()
G_1_Especif
#General (Área)
TAB_INF_G = BD_INF %>%
mutate(MES_REG = factor(month(F_REG),
levels = 1:12,
labels = c("Enero", "Febrero", "Marzo",
"Abril", "Mayo", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre",
"Noviembre", "Diciembre"))) %>%
group_by(MES_REG, AREA) %>%
summarise(CANT = n()) %>%
pivot_wider(
id_cols = c(AREA),
names_from = MES_REG,
values_from = c(CANT)
) %>%
ungroup() %>%
rowwise() %>%
mutate(TOTAL = sum(c_across(c(2,3)), na.rm = TRUE)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling()
TAB_INF_G
#Scater plot
G_2 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3) +
theme_bw() +
facet_wrap(~AREA)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_2
G_3 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3)+
theme_bw() +
facet_wrap(~ SUBSECT)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_3
G_3 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3)+
theme_bw() +
facet_wrap(~ SUBSECT)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")+
geom_smooth(method = lm)
G_3
G_3 = BD_INF %>%
ggplot(aes(x = SCORE,
y = CALIF,
color = ACEPT)) +
scale_color_manual(values = c("blue", "red", "grey"))+
geom_point(size = 3)+
theme_bw() +
facet_wrap(~ SUBSECT)+
labs(x = "Score herramienta [0-1]",
y = "Calificación evaluador [1-5]",
color = "Dictamen evaluador")
G_3
